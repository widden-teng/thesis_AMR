<launch>
    <arg name="image_view" default="true" />
    <arg name="video_device" default="/dev/video1" />
    <arg name="camera_name" default="usb_cam" />
    <arg name="inverse_tf" default="false" /> <!--inverse_tf will make tag becaome parent frame --> 


    <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
        <param name="video_device" value="$(arg video_device)" />
        <param name="camera_info_url" value="package://usb_cam/camera_info/head_camera.yaml"/>
        <param name="image_width" value="320" />
        <param name="image_height" value="240" />
        <param name="pixel_format" value="yuyv" />
        <param name="camera_frame_id" value="usb_cam" />
        <param name="io_method" value="mmap"/>
    </node>

    <node pkg="apriltags_ros" type="apriltag_detector_node" name="apriltag_detector_$(arg camera_name)" output="screen">
      <remap from="image_rect" to="$(arg camera_name)/image_raw" />
      <remap from="camera_info" to="$(arg camera_name)/camera_info" />

      <param name="image_transport" type="str" value="raw" />
      <param name="camera_name" value="$(arg camera_name)" />
      <param name="tag_family" type="str" value="36h11" />
      <param name="projected_optics" type="bool" value="true" />
      <param name="inverse_tf" type="bool" value="$(arg inverse_tf)" />
      <rosparam param="tag_descriptions">[
        {id: 0, size: 0.518},
        {id: 1, size: 0.163513, frame_id: a_frame},
        {id: 2, size: 0.163513, frame_id: tag_2},
        {id: 3, size: 0.163513},
        {id: 4, size: 0.163513},
        {id: 15, size: 0.039}]
      </rosparam>
    </node>

    <group if="$(arg image_view)">
        <node name="image_view_$(arg camera_name)" pkg="image_view" type="image_view" respawn="false" output="screen">
            <remap from="image" to="/tag_detections_image" />
        </node>
    </group>

</launch>
